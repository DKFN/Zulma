{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/zulma_switchcss.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","switch_css","THEME_KEY","STOP_BLINK_CSS_ID","STYLESHEET_CLASSNAME","link","previousLink","theme","localStorage","getItem","changeTheme","themeName","firstLoad","fileref","document","createElement","rel","type","href","concat","id","getElementsByTagName","appendChild","addEventListener","onLinkLoad","onLinkError","querySelectorAll","removeStylesheets","setItem","saveTheme","forEach","el","remove","removeEventListener","className","showBody","removeItem","removeFromThemeSelect","elements","length","element","window","setThemeSelect","css","getElementById","selected","init","head","style","setAttribute","styleSheet","cssText","createTextNode","onchange","this"],"mappings":"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","file":"zulma_switchcss.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","(function (switch_css) {\r\n    //Constants\r\n    const THEME_KEY = \"ZULMA_THEME\";\r\n    const STOP_BLINK_CSS_ID = \"stop-blink\";\r\n    const STYLESHEET_CLASSNAME = \"stylesheet\"\r\n\r\n    //Variables\r\n    let link = null;\r\n    let previousLink = null;\r\n    let theme = localStorage.getItem(THEME_KEY);\r\n\r\n    //Private Methods\r\n    /* Called when the theme is changed */\r\n    function changeTheme(themeName, firstLoad) {\r\n        //create the css link element\r\n        var fileref = document.createElement(\"link\");\r\n        fileref.rel = \"stylesheet\";\r\n        fileref.type = \"text/css\";\r\n        fileref.href = `/${themeName}.css`;\r\n        fileref.id = themeName;\r\n\r\n        //append it to the head\r\n        link = document.getElementsByTagName(\"head\")[0].appendChild(fileref);\r\n\r\n        //when it's loaded, call onLinkLoad\r\n        link.addEventListener('load', onLinkLoad);\r\n        //if it errors, call onLinkError\r\n        link.addEventListener('error', onLinkError);\r\n\r\n        //if this is the first load of the page, remove the current stylesheet early to avoid flash of wrongly styled content\r\n        if (firstLoad) {\r\n            //keep the old link in case something goes wrong\r\n            previousLink = document.querySelectorAll(`.${STYLESHEET_CLASSNAME}`)[0];\r\n            removeStylesheets();\r\n        }\r\n\r\n        saveTheme(themeName);\r\n    }\r\n\r\n    /* Removes all current stylesheets on the page */\r\n    function removeStylesheets() {\r\n        document.querySelectorAll(`.${STYLESHEET_CLASSNAME}`).forEach((el) => {\r\n            el.remove();\r\n        });\r\n    }\r\n\r\n    /* The function called when the css has finished loading */\r\n    function onLinkLoad() {\r\n        //remove event listeners\r\n        link.removeEventListener('load', onLinkLoad);\r\n        link.removeEventListener('error', onLinkError);\r\n        //remove the previous stylesheet(s)\r\n        removeStylesheets();\r\n        //add stylesheet class\r\n        link.className += STYLESHEET_CLASSNAME;\r\n        //everything is good, so we don't need this\r\n        previousLink = null;\r\n        //make body visible again if it was hidden\r\n        showBody();\r\n    }\r\n\r\n    function onLinkError() {\r\n        //remove event listeners\r\n        link.removeEventListener('load', onLinkLoad);\r\n        link.removeEventListener('error', onLinkError);\r\n        //remove theme from localstorage\r\n        clearTheme();\r\n        //remove theme from dropdown list\r\n        removeFromThemeSelect(link.id);\r\n        //remove link from page\r\n        link.remove();\r\n        //re-add the previous stylesheet (if any)\r\n        if (previousLink) {\r\n            document.getElementsByTagName(\"head\")[0].appendChild(previousLink);\r\n        }\r\n        //set the theme select to the previous stylesheet\r\n        setThemeSelect(document.querySelectorAll(`.${STYLESHEET_CLASSNAME}`)[0].id)\r\n        //make body visible again if it was hidden\r\n        showBody();\r\n    }\r\n\r\n    /* Saves the current theme in localstorage */\r\n    function saveTheme(themeName) {\r\n        localStorage.setItem(THEME_KEY, themeName);\r\n    }\r\n\r\n    /* Clears the current theme in localstorage */\r\n    function clearTheme() {\r\n        localStorage.removeItem(THEME_KEY);\r\n    }\r\n\r\n    /* Hides the body of the page */\r\n    function hideBody() {\r\n        let head = document.getElementsByTagName('head')[0];\r\n        let style = document.createElement('style');\r\n        let css = 'body{visibility:hidden;}';\r\n\r\n        style.id = STOP_BLINK_CSS_ID;\r\n        style.setAttribute('type', 'text/css');\r\n\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        } else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    }\r\n\r\n    /* Shows the body of the page */\r\n    function showBody() {\r\n        let css = document.getElementById(STOP_BLINK_CSS_ID);\r\n        if (css)\r\n            css.remove();\r\n    }\r\n\r\n    /* Sets the theme selection to the given theme */\r\n    function setThemeSelect(theme) {\r\n        //get all select options\r\n        let elements = document.querySelectorAll('#theme-select>option');\r\n        //if there are elements, the page is loaded and continue\r\n        if (elements.length) {\r\n            elements.forEach(element => {\r\n                if (element.value === theme) {\r\n                    element.selected = 'selected';\r\n                }\r\n            });\r\n        } else {\r\n            //if there are no elements, the page is not yet loaded; wait for loaded event and try again.\r\n            window.addEventListener('DOMContentLoaded', () => {\r\n                setThemeSelect(theme)\r\n            });\r\n        }\r\n    }\r\n\r\n    function removeFromThemeSelect(theme) {\r\n        //get all select options\r\n        let elements = document.querySelectorAll('#theme-select>option');\r\n        //if there are elements, the page is loaded\r\n        if (elements.length) {\r\n            elements.forEach(element => {\r\n                if (element.value === theme) {\r\n                    element.remove();\r\n                }\r\n            });\r\n        } else {\r\n            //if there are no elements, the page is not yet loaded; wait for loaded event and try again.\r\n            window.addEventListener('DOMContentLoaded', () => {\r\n                removeFromThemeSelect(theme)\r\n            });\r\n        }\r\n    }\r\n\r\n    //Public Methods\r\n    switch_css.init = function () {\r\n        //if user has selected and theme and it is not the current theme\r\n        if (theme && !document.getElementById(theme)) {\r\n            //hide the body to stop FOUC\r\n            hideBody();\r\n            //change the theme\r\n            changeTheme(theme, true);\r\n            //when the DOM is loaded, change the select to their current choice\r\n            setThemeSelect(theme);\r\n        }\r\n        //when the DOM is loaded, set the dropdown to trigger the theme change\r\n        window.addEventListener('DOMContentLoaded', () => {\r\n            document.getElementById('theme-select').onchange = function () {\r\n                changeTheme(this.value);\r\n            }\r\n        });\r\n    }\r\n}(switch_css = window.switch_css || {})); // eslint-disable-line\r\n\r\nswitch_css.init(); // eslint-disable-line"],"sourceRoot":""}